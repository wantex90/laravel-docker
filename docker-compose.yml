version: '3.7'

services:

  php:
    build:
      context: docker/php
      dockerfile: Dockerfile
      args:
        HOST_UID: ${HOST_UID}
    image: jjuanrivvera99/laravel:mysql-alpine
    restart: always
    depends_on:
      - redis
      - mysql
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    restart: always
    depends_on:
      - php
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/:/etc/nginx/conf.d/
      - ./docker/nginx/cert:/etc/letsencrypt/live/
    networks:
      - app-network

  queue:
    restart: always
    depends_on:
      - redis
    image: jjuanrivvera99/laravel:mysql-alpine
    command: sh -c "php artisan queue:work"
    volumes:
      - "./:/var/www/"
    networks:
      - app-network

  scheduler:
    restart: always
    depends_on:
      - redis
    image: jjuanrivvera99/laravel:mysql-alpine
    command: sh -c "while [ true ]; do php /var/www/artisan schedule:run --verbose --no-interaction && sleep 60; done"
    volumes:
      - "./:/var/www/"
    networks:
      - app-network

  node:
    image: node:lts-alpine
    restart: always
    command: sh -c "tail -f /dev/null"
    working_dir: /var/www
    volumes:
      - ./:/var/www

  mysql:
    image: mysql:5.7.22
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: example
    volumes:
      - mysql-data:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local

  redis-data:
    driver: local
